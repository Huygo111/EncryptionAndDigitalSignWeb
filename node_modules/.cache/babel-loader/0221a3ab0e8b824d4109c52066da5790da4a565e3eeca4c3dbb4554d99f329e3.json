{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\u1EADt m\\xE3 v\\xE0 an to\\xE0n th\\xF4ng tin\\\\test\\\\src\\\\Signature ElGamal\\\\SignatureElGamal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../General.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElGamalSignature = () => {\n  _s();\n  const [p, setP] = useState(\"\"); // Prime number\n  const [g, setG] = useState(\"\"); // Generator\n  const [a, setA] = useState(\"\"); // Private key\n  const [x, setX] = useState(\"\"); // Message to sign\n  const [k, setK] = useState(\"\"); // Random k\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSign = async () => {\n    setError(null);\n    setResult(null);\n    if (!p || !g || !a || !x || !k) {\n      setError(\"Please fill in all fields.\");\n      return;\n    }\n    if (![p, g, a, x, k].every(val => /^\\d+$/.test(val))) {\n      setError(\"All inputs must be valid integers.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:5000/signature/elgamal\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          p,\n          g,\n          a,\n          x,\n          k\n        }) // Truyền các giá trị là chuỗi\n      });\n      const data = await response.json();\n      if (data.result && data.result !== \"Successful\") {\n        setError(data.result); // Hiển thị lỗi từ backend\n      } else {\n        setResult(data); // Hiển thị kết quả thành công\n      }\n    } catch (err) {\n      console.error(err);\n      setError(\"Failed to connect to the server.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ElGamal Digital Signature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Prime number (p):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: p,\n        onChange: e => setP(e.target.value),\n        placeholder: \"Enter a large prime number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Generator (g):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: g,\n        onChange: e => setG(e.target.value),\n        placeholder: \"Enter a generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Private key (a):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: a,\n        onChange: e => setA(e.target.value),\n        placeholder: \"Enter private key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Random k:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: k,\n        onChange: e => setK(e.target.value),\n        placeholder: \"Enter a random k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message to sign (x):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: x,\n        onChange: e => setX(e.target.value),\n        placeholder: \"Enter the message to sign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSign,\n      children: \"Sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"10px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signature Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Public Key (p, g, \\u03B2):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), \" (\", result.publicKey[0], \", \", result.publicKey[1], \", \", result.publicKey[2], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Private Key (a):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), \" \", result.privateKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature (\\u03B3, \\u03C3):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), \" (\", result.sign[0], \", \", result.sign[1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), \" \", result.result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ElGamalSignature, \"YdVoUOZszZudApjbrAlJP8UIclE=\");\n_c = ElGamalSignature;\nexport default ElGamalSignature;\nvar _c;\n$RefreshReg$(_c, \"ElGamalSignature\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ElGamalSignature","_s","p","setP","g","setG","a","setA","x","setX","k","setK","result","setResult","error","setError","handleSign","every","val","test","response","fetch","method","headers","body","JSON","stringify","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","marginTop","publicKey","privateKey","sign","_c","$RefreshReg$"],"sources":["D:/Mật mã và an toàn thông tin/test/src/Signature ElGamal/SignatureElGamal.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../General.css\";\r\n\r\nconst ElGamalSignature: React.FC = () => {\r\n    const [p, setP] = useState<string>(\"\"); // Prime number\r\n    const [g, setG] = useState<string>(\"\"); // Generator\r\n    const [a, setA] = useState<string>(\"\"); // Private key\r\n    const [x, setX] = useState<string>(\"\"); // Message to sign\r\n    const [k, setK] = useState<string>(\"\"); // Random k\r\n    const [result, setResult] = useState<any | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const handleSign = async () => {\r\n        setError(null);\r\n        setResult(null);\r\n\r\n        if (!p || !g || !a || !x || !k) {\r\n            setError(\"Please fill in all fields.\");\r\n            return;\r\n        }\r\n\r\n        if (![p, g, a, x, k].every((val) => /^\\d+$/.test(val))) {\r\n            setError(\"All inputs must be valid integers.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/signature/elgamal\", {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify({ p, g, a, x, k }), // Truyền các giá trị là chuỗi\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.result && data.result !== \"Successful\") {\r\n                setError(data.result); // Hiển thị lỗi từ backend\r\n            } else {\r\n                setResult(data); // Hiển thị kết quả thành công\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError(\"Failed to connect to the server.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>ElGamal Digital Signature</h1>\r\n            <div className=\"input-group\">\r\n                <label>Prime number (p):</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={p}\r\n                    onChange={(e) => setP(e.target.value)}\r\n                    placeholder=\"Enter a large prime number\"\r\n                />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Generator (g):</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={g}\r\n                    onChange={(e) => setG(e.target.value)}\r\n                    placeholder=\"Enter a generator\"\r\n                />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Private key (a):</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={a}\r\n                    onChange={(e) => setA(e.target.value)}\r\n                    placeholder=\"Enter private key\"\r\n                />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Random k:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={k}\r\n                    onChange={(e) => setK(e.target.value)}\r\n                    placeholder=\"Enter a random k\"\r\n                />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Message to sign (x):</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={x}\r\n                    onChange={(e) => setX(e.target.value)}\r\n                    placeholder=\"Enter the message to sign\"\r\n                />\r\n            </div>\r\n            <button onClick={handleSign}>Sign</button>\r\n\r\n            {error && (\r\n                <p style={{ color: \"red\", marginTop: \"10px\" }}>\r\n                    {error}\r\n                </p>\r\n            )}\r\n\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <h2>Signature Results</h2>\r\n                    <p>\r\n                        <strong>Public Key (p, g, β):</strong> ({result.publicKey[0]}, {result.publicKey[1]}, {result.publicKey[2]})\r\n                    </p>\r\n                    <p>\r\n                        <strong>Private Key (a):</strong> {result.privateKey}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Signature (γ, σ):</strong> ({result.sign[0]}, {result.sign[1]})\r\n                    </p>\r\n                    <p>\r\n                        <strong>Result:</strong> {result.result}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ElGamalSignature;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
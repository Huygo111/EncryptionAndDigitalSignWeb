{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\u1EADt m\\xE3 v\\xE0 an to\\xE0n th\\xF4ng tin\\\\test\\\\src\\\\Hash\\\\Hash.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../General.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HashMessage = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [hashResult, setHashResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleHash = async () => {\n    setError(null);\n    setHashResult(null);\n    if (!message) {\n      setError('Please enter a message to hash.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/hash/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setHashResult(data.hash);\n      } else {\n        setError(data.error || 'Failed to hash the message.');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Failed to connect to the server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hash Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Enter your message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleHash,\n      children: \"Hash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), hashResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hash Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), \" \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"SHA-256 Hash:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), \" \", hashResult]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(HashMessage, \"0zUb3MtETCGCqQcfAgrsdicUkuU=\");\n_c = HashMessage;\nexport default HashMessage;\nvar _c;\n$RefreshReg$(_c, \"HashMessage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","HashMessage","_s","message","setMessage","hashResult","setHashResult","error","setError","handleHash","response","fetch","method","headers","body","JSON","stringify","data","json","ok","hash","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["D:/Mật mã và an toàn thông tin/test/src/Hash/Hash.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../General.css';\r\n\r\nconst HashMessage: React.FC = () => {\r\n    const [message, setMessage] = useState<string>('');\r\n    const [hashResult, setHashResult] = useState<string | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const handleHash = async () => {\r\n        setError(null);\r\n        setHashResult(null);\r\n\r\n        if (!message) {\r\n            setError('Please enter a message to hash.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/hash/message', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ message }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setHashResult(data.hash);\r\n            } else {\r\n                setError(data.error || 'Failed to hash the message.');\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to connect to the server.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Hash Message</h1>\r\n            <div className=\"input-group\">\r\n                <label>Message:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Enter your message here\"\r\n                />\r\n            </div>\r\n            <button onClick={handleHash}>Hash</button>\r\n\r\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n\r\n            {hashResult && (\r\n                <div className=\"result\">\r\n                    <h2>Hash Result</h2>\r\n                    <p>\r\n                        <strong>Message:</strong> {message}\r\n                    </p>\r\n                    <p>\r\n                        <strong>SHA-256 Hash:</strong> {hashResult}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HashMessage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\u1EADt m\\xE3 v\\xE0 an to\\xE0n th\\xF4ng tin\\\\test\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RSAEncryption = () => {\n  _s();\n  const [p, setP] = useState(0);\n  const [q, setQ] = useState(0);\n  const [e, setE] = useState(0);\n  const [m, setM] = useState(0);\n  const [cipherText, setCipherText] = useState('');\n  const handleEncrypt = async () => {\n    const response = await fetch('http://localhost:5000/encrypt', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        p,\n        q,\n        e,\n        m\n      })\n    });\n    const data = await response.json();\n    setCipherText(data.cipherText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RSA Encryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 1: Set prime numbers. As a starting point for RSA, choose two prime numbers p and q\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"p:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: p,\n      onChange: e => setP(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"q:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: q,\n      onChange: e => setQ(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"e:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: e,\n      onChange: e => setE(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"m (Message):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: m,\n      onChange: e => setM(Number(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), cipherText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Encrypted Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cipherText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Created by \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this), \". This tool demonstrates the RSA encryption process.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n_s(RSAEncryption, \"L4aL2NLvXEsfD1jM2/brlHloxfU=\");\n_c = RSAEncryption;\nexport default RSAEncryption;\nvar _c;\n$RefreshReg$(_c, \"RSAEncryption\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RSAEncryption","_s","p","setP","q","setQ","e","setE","m","setM","cipherText","setCipherText","handleEncrypt","response","fetch","method","headers","body","JSON","stringify","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","Number","target","onClick","_c","$RefreshReg$"],"sources":["D:/Mật mã và an toàn thông tin/test/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst RSAEncryption: React.FC = () => {\n  const [p, setP] = useState<number>(0);\n  const [q, setQ] = useState<number>(0);\n  const [e, setE] = useState<number>(0);\n  const [m, setM] = useState<number>(0);\n  const [cipherText, setCipherText] = useState<string>('');\n\n  const handleEncrypt = async () => {\n    const response = await fetch('http://localhost:5000/encrypt', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ p, q, e, m }),\n    });\n    const data = await response.json();\n    setCipherText(data.cipherText);\n  };\n\n  return (\n      <div className=\"container\">\n          <h1>RSA Encryption</h1>\n          <h2>\n              Step 1: Set prime numbers. As a starting point for RSA, choose two prime numbers p and q\n          </h2>\n          <label>p:</label>\n          <input type=\"number\" value={p} onChange={(e) => setP(Number(e.target.value))}/>\n          <label>q:</label>\n          <input type=\"number\" value={q} onChange={(e) => setQ(Number(e.target.value))}/>\n          <label>e:</label>\n          <input type=\"number\" value={e} onChange={(e) => setE(Number(e.target.value))}/>\n          <label>m (Message):</label>\n          <input type=\"number\" value={m} onChange={(e) => setM(Number(e.target.value))}/>\n          <button onClick={handleEncrypt}>Encrypt</button>\n          {cipherText && (\n              <div className=\"result\">\n                  <h2>Encrypted Message:</h2>\n                  <p>{cipherText}</p>\n              </div>\n          )}\n          {/* Thêm footer */}\n          <footer>\n              <p>\n                  Created by <strong>Your Name</strong>. This tool demonstrates the RSA encryption process.\n              </p>\n          </footer>\n      </div>\n  );\n};\n\nexport default RSAEncryption;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\u1EADt m\\xE3 v\\xE0 an to\\xE0n th\\xF4ng tin\\\\test\\\\src\\\\Signature ElGamal\\\\SignatureElGamal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../General.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElGamalSignature = () => {\n  _s();\n  const [p, setP] = useState(''); // Số nguyên tố p\n  const [g, setG] = useState(''); // Generator g\n  const [a, setA] = useState(''); // Khóa riêng tư a\n  const [x, setX] = useState(''); // Thông điệp x (được băm trước)\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleSign = async () => {\n    setError(null);\n    setResult(null);\n\n    // Kiểm tra các giá trị đầu vào\n    if (!p || !g || !a || !x) {\n      setError('Please fill in all fields.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/signature/elgamal', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          p: parseInt(p),\n          g: parseInt(g),\n          a: parseInt(a),\n          x: parseInt(x)\n        })\n      });\n      const data = await response.json();\n      if (data.result !== \"Successful\") {\n        setError(data.result);\n      } else {\n        setResult(data);\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Failed to connect to server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ElGamal Digital Signature\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Prime number p:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: p,\n        onChange: e => setP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Generator g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: g,\n        onChange: e => setG(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Private key a:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: a,\n        onChange: e => setA(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Hashed message x:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: x,\n        onChange: e => setX(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSign,\n      children: \"Sign\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Signature Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Public Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), \" (p=\", result.publicKey[0], \", g=\", result.publicKey[1], \", \\u03B2=\", result.publicKey[2], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Private Key (a):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), \" \", result.privateKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Signature (\\u03B3, \\u03C3):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), \" (\", result.sign[0], \", \", result.sign[1], \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: result.result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(ElGamalSignature, \"NrhJvm8t7Mdxw1AxstSejKYiNgQ=\");\n_c = ElGamalSignature;\nexport default ElGamalSignature;\nvar _c;\n$RefreshReg$(_c, \"ElGamalSignature\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ElGamalSignature","_s","p","setP","g","setG","a","setA","x","setX","result","setResult","error","setError","handleSign","response","fetch","method","headers","body","JSON","stringify","parseInt","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","style","color","publicKey","privateKey","sign","_c","$RefreshReg$"],"sources":["D:/Mật mã và an toàn thông tin/test/src/Signature ElGamal/SignatureElGamal.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../General.css';\r\n\r\nconst ElGamalSignature: React.FC = () => {\r\n    const [p, setP] = useState<string>(''); // Số nguyên tố p\r\n    const [g, setG] = useState<string>(''); // Generator g\r\n    const [a, setA] = useState<string>(''); // Khóa riêng tư a\r\n    const [x, setX] = useState<string>(''); // Thông điệp x (được băm trước)\r\n    const [result, setResult] = useState<any | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const handleSign = async () => {\r\n        setError(null);\r\n        setResult(null);\r\n\r\n        // Kiểm tra các giá trị đầu vào\r\n        if (!p || !g || !a || !x) {\r\n            setError('Please fill in all fields.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/signature/elgamal', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                    p: parseInt(p),\r\n                    g: parseInt(g),\r\n                    a: parseInt(a),\r\n                    x: parseInt(x),\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (data.result !== \"Successful\") {\r\n                setError(data.result);\r\n            } else {\r\n                setResult(data);\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError('Failed to connect to server.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>ElGamal Digital Signature</h1>\r\n            <div className=\"input-group\">\r\n                <label>Prime number p:</label>\r\n                <input type=\"number\" value={p} onChange={(e) => setP(e.target.value)} />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Generator g:</label>\r\n                <input type=\"number\" value={g} onChange={(e) => setG(e.target.value)} />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Private key a:</label>\r\n                <input type=\"number\" value={a} onChange={(e) => setA(e.target.value)} />\r\n            </div>\r\n            <div className=\"input-group\">\r\n                <label>Hashed message x:</label>\r\n                <input type=\"number\" value={x} onChange={(e) => setX(e.target.value)} />\r\n            </div>\r\n            <button onClick={handleSign}>Sign</button>\r\n\r\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n\r\n            {result && (\r\n                <div className=\"result\">\r\n                    <h2>Signature Results</h2>\r\n                    <p>\r\n                        <strong>Public Key:</strong> (p={result.publicKey[0]}, g={result.publicKey[1]}, β={result.publicKey[2]})\r\n                    </p>\r\n                    <p>\r\n                        <strong>Private Key (a):</strong> {result.privateKey}\r\n                    </p>\r\n                    <p>\r\n                        <strong>Signature (γ, σ):</strong> ({result.sign[0]}, {result.sign[1]})\r\n                    </p>\r\n                    <p style={{ color: 'green' }}>\r\n                        <strong>{result.result}</strong>\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ElGamalSignature;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
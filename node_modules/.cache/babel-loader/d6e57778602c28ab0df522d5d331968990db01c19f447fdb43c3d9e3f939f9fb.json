{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\u1EADt m\\xE3 v\\xE0 an to\\xE0n th\\xF4ng tin\\\\test\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RSAEncryption = () => {\n  _s();\n  const [p, setP] = useState(0);\n  const [q, setQ] = useState(0);\n  const [e, setE] = useState(0);\n  const [m, setM] = useState(0);\n  const [cipherText, setCipherText] = useState(null);\n  const [originalMessage, setOriginalMessage] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleEncrypt = async () => {\n    setError(null); // Reset error trước mỗi lần gọi API\n    try {\n      const response = await fetch('http://localhost:5000/encrypt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          p,\n          q,\n          e,\n          m\n        })\n      });\n      const data = await response.json();\n      if (data.error) {\n        setError(data.error);\n        setCipherText(null);\n        setOriginalMessage(null);\n        setResult(null);\n      } else {\n        setCipherText(data.cipherText);\n        setOriginalMessage(data.originalMessage);\n        setResult(data.result);\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to connect to server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RSA Encryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 1: Set prime numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"p:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: p,\n        onChange: e => setP(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"q:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: q,\n        onChange: e => setQ(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 2: The number e can now be chosen freely. However, it must be coprime to \\u03D5(n) = (p-1)(q-1)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"e:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: e,\n        onChange: e => setE(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 3: Enter the message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"m:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: m,\n        onChange: e => setM(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }, this), cipherText && originalMessage !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), \" \", cipherText]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Decrypted ciphertext:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this), \" \", originalMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(RSAEncryption, \"yJAqIDVl/9TLvcsvuJLj6udpn4g=\");\n_c = RSAEncryption;\nexport default RSAEncryption;\nvar _c;\n$RefreshReg$(_c, \"RSAEncryption\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RSAEncryption","_s","p","setP","q","setQ","e","setE","m","setM","cipherText","setCipherText","originalMessage","setOriginalMessage","result","setResult","error","setError","handleEncrypt","response","fetch","method","headers","body","JSON","stringify","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","Number","target","onClick","style","color","_c","$RefreshReg$"],"sources":["D:/Mật mã và an toàn thông tin/test/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst RSAEncryption: React.FC = () => {\n    const [p, setP] = useState<number>(0);\n    const [q, setQ] = useState<number>(0);\n    const [e, setE] = useState<number>(0);\n    const [m, setM] = useState<number>(0);\n    const [cipherText, setCipherText] = useState<string | null>(null);\n    const [originalMessage, setOriginalMessage] = useState<number | null>(null);\n    const [result, setResult] = useState<number | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const handleEncrypt = async () => {\n        setError(null); // Reset error trước mỗi lần gọi API\n        try {\n            const response = await fetch('http://localhost:5000/encrypt', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ p, q, e, m }),\n            });\n            const data = await response.json();\n\n            if (data.error) {\n                setError(data.error);\n                setCipherText(null);\n                setOriginalMessage(null);\n                setResult(null);\n            } else {\n                setCipherText(data.cipherText);\n                setOriginalMessage(data.originalMessage);\n                setResult(data.result);\n            }\n        } catch (err) {\n            console.error('Error:', err);\n            setError('Failed to connect to server.');\n        }\n    };\n\n    return (\n        <div className=\"container\">\n            <h1>RSA Encryption</h1>\n            <h2>Step 1: Set prime numbers</h2>\n            <div className=\"input-group\">\n                <label>p:</label>\n                <input type=\"number\" value={p} onChange={(e) => setP(Number(e.target.value))}/>\n            </div>\n            <div className=\"input-group\">\n                <label>q:</label>\n                <input type=\"number\" value={q} onChange={(e) => setQ(Number(e.target.value))}/>\n            </div>\n            <h2>Step 2: The number e can now be chosen freely. However, it must be coprime to ϕ(n) = (p-1)(q-1)</h2>\n            <div className=\"input-group\">\n                <label>e:</label>\n                <input type=\"number\" value={e} onChange={(e) => setE(Number(e.target.value))}/>\n            </div>\n            <h2>Step 3: Enter the message</h2>\n            <div className=\"input-group\">\n                <label>m:</label>\n                <input type=\"number\" value={m} onChange={(e) => setM(Number(e.target.value))}/>\n            </div>\n            <button onClick={handleEncrypt}>Encrypt</button>\n\n            {error && <p style={{color: 'red'}}>Error: {error}</p>}\n\n            {cipherText && originalMessage !== null && (\n                <div>\n                    <h2>Results:</h2>\n                    <p>\n                        <strong>Encrypted Message:</strong> {result}\n                    </p>\n                    <p>\n                        <strong>Encrypted Message:</strong> {cipherText}\n                    </p>\n                    <p>\n                        <strong>Decrypted ciphertext:</strong> {originalMessage}\n                    </p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RSAEncryption;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\M\\u1EADt m\\xE3 v\\xE0 an to\\xE0n th\\xF4ng tin\\\\test\\\\src\\\\ElGamal\\\\ElGamal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ElGamal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElGamalEncryption = () => {\n  _s();\n  const [p, setP] = useState(''); // Số nguyên tố lớn\n  const [g, setG] = useState(''); // Generator\n  const [y, setY] = useState(''); // Public key\n  const [m, setM] = useState(''); // Message\n  const [cipherText, setCipherText] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(null);\n  const handleEncrypt = async () => {\n    setError(null); // Reset lỗi trước mỗi lần gọi API\n    setResult(null); // Reset result trước mỗi lần gọi API\n\n    // Kiểm tra nếu các input không rỗng\n    if (!p || !g || !y || !m) {\n      setError('Please fill in all fields');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/encrypt/elgamal', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          p: parseInt(p),\n          g: parseInt(g),\n          y: parseInt(y),\n          m: parseInt(m)\n        })\n      });\n      const data = await response.json();\n\n      // Xử lý phản hồi từ API\n      if (data.result !== \"Successful\") {\n        setError(data.result); // Hiển thị lỗi nếu result không phải \"Successful\"\n        setCipherText(null);\n      } else {\n        setCipherText(data.cipherText);\n        setResult(data.result); // Hiển thị kết quả thành công\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setError('Failed to connect to server.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ElGamal Encryption\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 1: Enter a prime number p\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"p:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: p,\n        onChange: e => setP(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 2: Enter a generator g\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"g:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: g,\n        onChange: e => setG(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 3: Enter public key y\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"y:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: y,\n        onChange: e => setY(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Step 4: Enter the message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"m:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: m,\n        onChange: e => setM(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEncrypt,\n      children: \"Encrypt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }, this), result === \"Successful\" && cipherText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Encrypted Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), \" c1 = \", cipherText[0], \", c2 = \", cipherText[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'green'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), \" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ElGamalEncryption, \"jlHP7DTxvlN98CK3uf29u8xiPRU=\");\n_c = ElGamalEncryption;\nexport default ElGamalEncryption;\nvar _c;\n$RefreshReg$(_c, \"ElGamalEncryption\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ElGamalEncryption","_s","p","setP","g","setG","y","setY","m","setM","cipherText","setCipherText","result","setResult","error","setError","handleEncrypt","response","fetch","method","headers","body","JSON","stringify","parseInt","data","json","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["D:/Mật mã và an toàn thông tin/test/src/ElGamal/ElGamal.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ElGamal.css';\r\n\r\nconst ElGamalEncryption: React.FC = () => {\r\n    const [p, setP] = useState<string>(''); // Số nguyên tố lớn\r\n    const [g, setG] = useState<string>(''); // Generator\r\n    const [y, setY] = useState<string>(''); // Public key\r\n    const [m, setM] = useState<string>(''); // Message\r\n    const [cipherText, setCipherText] = useState<[number, number] | null>(null);\r\n    const [result, setResult] = useState<string | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const handleEncrypt = async () => {\r\n        setError(null); // Reset lỗi trước mỗi lần gọi API\r\n        setResult(null); // Reset result trước mỗi lần gọi API\r\n\r\n        // Kiểm tra nếu các input không rỗng\r\n        if (!p || !g || !y || !m) {\r\n            setError('Please fill in all fields');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/encrypt/elgamal', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    p: parseInt(p),\r\n                    g: parseInt(g),\r\n                    y: parseInt(y),\r\n                    m: parseInt(m),\r\n                }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            // Xử lý phản hồi từ API\r\n            if (data.result !== \"Successful\") {\r\n                setError(data.result); // Hiển thị lỗi nếu result không phải \"Successful\"\r\n                setCipherText(null);\r\n            } else {\r\n                setCipherText(data.cipherText);\r\n                setResult(data.result); // Hiển thị kết quả thành công\r\n            }\r\n        } catch (err) {\r\n            console.error('Error:', err);\r\n            setError('Failed to connect to server.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>ElGamal Encryption</h1>\r\n            <h2>Step 1: Enter a prime number p</h2>\r\n            <div className=\"input-group\">\r\n                <label>p:</label>\r\n                <input type=\"number\" value={p} onChange={(e) => setP(e.target.value)} />\r\n            </div>\r\n            <h2>Step 2: Enter a generator g</h2>\r\n            <div className=\"input-group\">\r\n                <label>g:</label>\r\n                <input type=\"number\" value={g} onChange={(e) => setG(e.target.value)} />\r\n            </div>\r\n            <h2>Step 3: Enter public key y</h2>\r\n            <div className=\"input-group\">\r\n                <label>y:</label>\r\n                <input type=\"number\" value={y} onChange={(e) => setY(e.target.value)} />\r\n            </div>\r\n            <h2>Step 4: Enter the message</h2>\r\n            <div className=\"input-group\">\r\n                <label>m:</label>\r\n                <input type=\"number\" value={m} onChange={(e) => setM(e.target.value)} />\r\n            </div>\r\n            <button onClick={handleEncrypt}>Encrypt</button>\r\n\r\n            {/* Hiển thị lỗi nếu có */}\r\n            {error && <p style={{ color: 'red' }}>Error: {error}</p>}\r\n\r\n            {/* Hiển thị kết quả nếu thành công */}\r\n            {result === \"Successful\" && cipherText && (\r\n                <div>\r\n                    <p>\r\n                        <strong>Encrypted Message:</strong> c1 = {cipherText[0]}, c2 = {cipherText[1]}\r\n                    </p>\r\n                    <p style={{ color: 'green' }}>\r\n                        <strong>Result:</strong> {result}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ElGamalEncryption;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,CAAC,EAAEC,IAAI,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,CAAC,EAAEC,IAAI,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,CAAC,EAAEC,IAAI,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACW,CAAC,EAAEC,IAAI,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAA0B,IAAI,CAAC;EAC3E,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC;EAEvD,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9BD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAChBF,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEjB;IACA,IAAI,CAACX,CAAC,IAAI,CAACE,CAAC,IAAI,CAACE,CAAC,IAAI,CAACE,CAAC,EAAE;MACtBO,QAAQ,CAAC,2BAA2B,CAAC;MACrC;IACJ;IAEA,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBrB,CAAC,EAAEsB,QAAQ,CAACtB,CAAC,CAAC;UACdE,CAAC,EAAEoB,QAAQ,CAACpB,CAAC,CAAC;UACdE,CAAC,EAAEkB,QAAQ,CAAClB,CAAC,CAAC;UACdE,CAAC,EAAEgB,QAAQ,CAAChB,CAAC;QACjB,CAAC;MACL,CAAC,CAAC;MAEF,MAAMiB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;MAElC;MACA,IAAID,IAAI,CAACb,MAAM,KAAK,YAAY,EAAE;QAC9BG,QAAQ,CAACU,IAAI,CAACb,MAAM,CAAC,CAAC,CAAC;QACvBD,aAAa,CAAC,IAAI,CAAC;MACvB,CAAC,MAAM;QACHA,aAAa,CAACc,IAAI,CAACf,UAAU,CAAC;QAC9BG,SAAS,CAACY,IAAI,CAACb,MAAM,CAAC,CAAC,CAAC;MAC5B;IACJ,CAAC,CAAC,OAAOe,GAAG,EAAE;MACVC,OAAO,CAACd,KAAK,CAAC,QAAQ,EAAEa,GAAG,CAAC;MAC5BZ,QAAQ,CAAC,8BAA8B,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIhB,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtB/B,OAAA;MAAA+B,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BnC,OAAA;MAAA+B,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvCnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB/B,OAAA;QAAA+B,QAAA,EAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjBnC,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAElC,CAAE;QAACmC,QAAQ,EAAGC,CAAC,IAAKnC,IAAI,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNnC,OAAA;MAAA+B,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB/B,OAAA;QAAA+B,QAAA,EAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjBnC,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAEhC,CAAE;QAACiC,QAAQ,EAAGC,CAAC,IAAKjC,IAAI,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNnC,OAAA;MAAA+B,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB/B,OAAA;QAAA+B,QAAA,EAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjBnC,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAE9B,CAAE;QAAC+B,QAAQ,EAAGC,CAAC,IAAK/B,IAAI,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNnC,OAAA;MAAA+B,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxB/B,OAAA;QAAA+B,QAAA,EAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjBnC,OAAA;QAAOoC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAE5B,CAAE;QAAC6B,QAAQ,EAAGC,CAAC,IAAK7B,IAAI,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNnC,OAAA;MAAQyC,OAAO,EAAExB,aAAc;MAAAc,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAG/CpB,KAAK,iBAAIf,OAAA;MAAG0C,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAZ,QAAA,GAAC,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGvDtB,MAAM,KAAK,YAAY,IAAIF,UAAU,iBAClCX,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,gBACI/B,OAAA;UAAA+B,QAAA,EAAQ;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,UAAM,EAACxB,UAAU,CAAC,CAAC,CAAC,EAAC,SAAO,EAACA,UAAU,CAAC,CAAC,CAAC;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eACJnC,OAAA;QAAG0C,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAZ,QAAA,gBACzB/B,OAAA;UAAA+B,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACtB,MAAM;MAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACjC,EAAA,CA1FID,iBAA2B;AAAA2C,EAAA,GAA3B3C,iBAA2B;AA4FjC,eAAeA,iBAAiB;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}